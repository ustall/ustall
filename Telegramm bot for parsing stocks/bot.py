import logging

from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text

import config
from parsingCPR import parse_crypto_rub, parse_crypto_usd, cr_best_up, cr_best_down
from parsingSTCK import parse_usd_up, parse_usd_dwn, parse_usd_top, parse_rub_top, parse_rub_up, parse_rub_down

# log level
logging.basicConfig(level=logging.INFO)

# bot init
bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def greetings(message: types.Message):
    start_buttons = ['/üÜì–ö—Ä–∏–ø—Ç–∞', '/üí≤USA(XAX)', '/üá∑üá∫RUS(MOEX)']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)
    await message.answer("–ü—Ä–∏–≤–µ—Ç!\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–ª—å–Ω–æ–π —Å–≤–æ–¥–∫–∏ –ø–æ —Ä—ã–Ω–∫–∞–º.\n–î–ª—è "
                         "–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Ñ—É–Ω–∫–∏—Ü–æ–Ω–∞–ª–æ–º –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help –∏–ª–∏ –º–µ–Ω—é –∫–æ–º–º–∞–Ω–¥.",
                         reply_markup=keyboard)


@dp.message_handler(commands=["help"])
async def Help(message: types.Message):
    start_buttons = ['/üÜì–ö—Ä–∏–ø—Ç–∞', '/üí≤USA(XAX)', '/üá∑üá∫RUS(MOEX)']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)
    await message.answer("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞:\n"
                         "\nüÜì –ö—Ä–ø–∏—Ç–æ–≤–∞–ª—é—Ç–∞:\n/crypto_RUB - –°–≤–æ–¥–∫–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –≤ —Ä—É–±–ª—è—Ö\n/crypto_USD - "
                         "–°–≤–æ–¥–∫–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö\n"
                         "/crypto_up - –õ–∏–¥–µ—Ä —Ä–æ—Å—Ç–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
                         "/crypto_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"
                         "\n\nüí≤ –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –±–∏—Ä–∂–∞:"
                         "\n/Usa_top - 10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –°–®–ê"
                         "\n/Usa_up - –õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –Ω–∞ –∞–º–µ—Ä–∏–∫–∞—Å–Ω–∫–æ–π –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞"
                         "\n/Usa_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –Ω–∞ –∞–º–µ—Ä–∏–∫–∞—Å–Ω–∫–æ–π –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞"
                         "\n\nüá∑üá∫ –†—É—Å—Å–∫–∞—è –±–∏—Ä–∂–∞ (MOEX):"
                         "\n/ru_top - 10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –†–§ (MOEX)"
                         "\n/ru_up - –õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –Ω–∞ MOEX –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞"
                         "\n/ru_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –Ω–∞ MOEX –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞")


@dp.message_handler(commands=("crypto", "üÜì–ö—Ä–∏–ø—Ç–∞"))
async def CRP(message: types.Message):
    await message.answer('\nüÜì –ö—Ä–ø–∏—Ç–æ–≤–∞–ª—é—Ç–∞:\n/crypto_RUB - –°–≤–æ–¥–∫–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –≤ —Ä—É–±–ª—è—Ö\n/crypto_USD - '
                         '–°–≤–æ–¥–∫–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö\n'
                         '/crypto_up - –õ–∏–¥–µ—Ä —Ä–æ—Å—Ç–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n'
                         '/crypto_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö '
                         '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')


@dp.message_handler(commands=("usa","/üí≤USA(XAX)"))
async def US(message: types.Message):
    await message.answer("\n\nüá∫üá∏ –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –±–∏—Ä–∂–∞:"
                         "\n/Usa_top - 10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –°–®–ê"
                         "\n/Usa_up - –õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –Ω–∞ –∞–º–µ—Ä–∏–∫–∞—Å–Ω–∫–æ–π –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞"
                         "\n/Usa_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –Ω–∞ –∞–º–µ—Ä–∏–∫–∞—Å–Ω–∫–æ–π –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞")


@dp.message_handler(commands=("ru","üá∑üá∫RUS(MOEX)"))
async def RUS(message: types.Message):
    await message.answer("\n\nüí≤ –†—É—Å—Å–∫–∞—è –±–∏—Ä–∂–∞ (MOEX):"
                         "\n/ru_top - 10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –†–§ (MOEX)"
                         "\n/ru_up - –õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –Ω–∞ MOEX –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞"
                         "\n/ru_down - –°–∏–ª—å–Ω–µ–π—à–∏–µ –ø–∞–¥–µ–Ω–∏—è –Ω–∞ MOEX –±–∏—Ä–∂–µ –∑–∞ 24 —á–∞—Å–∞")


@dp.message_handler(commands=("–∫—Ä–∏–ø—Ç–∞", "crypto_RUB", "cryptorub"))
async def crRu(message: types.Message):
    await message.answer(parse_crypto_rub())


@dp.message_handler(commands=("cryptotop", "crypto_USD", "cryptousd"))
async def crUS(message: types.Message):
    await message.answer(parse_crypto_usd())


@dp.message_handler(commands=("crup", "crypto_up"))
async def crUp(message: types.Message):
    await message.answer("–õ–∏–¥–µ—Ä —Ä–æ—Å—Ç–∞ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n" + cr_best_up())


@dp.message_handler(commands=("crdown", "crypto_down"))
async def crDw(message: types.Message):
    await message.answer("–°–∏–ª—å–Ω–µ–π—à–µ–µ –ø–∞–¥–µ–Ω–∏–µ —Å—Ä–µ–¥–∏ –∞–∫—É—Ç–∞–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n" + cr_best_down())


@dp.message_handler(commands=("usaup", "Usa_up"))
async def usSTUp(message: types.Message):
    await message.answer("–õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –≤ –°–®–ê:\n" + parse_usd_up())


@dp.message_handler(commands=("usadwn", "Usa_down"))
async def usSTdwn(message: types.Message):
    await message.answer("–õ–∏–¥–µ—Ä—ã –ø–∞–¥–µ–Ω–∏—è –≤ –°–®–ê:\n" + parse_usd_dwn())


@dp.message_handler(commands=("usatop", "Usa_top"))
async def usSTdwn(message: types.Message):
    await message.answer("10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –°–®–ê:\n" + parse_usd_top())


@dp.message_handler(commands=("rutop", "ru_top"))
async def rutop(message: types.Message):
    await message.answer("10 c–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –†–§:\n" + parse_rub_top())


@dp.message_handler(commands=("rudown", "ru_down"))
async def rutop(message: types.Message):
    await message.answer("–õ–∏–¥–µ—Ä—ã –ø–∞–¥–µ–Ω–∏—è –≤ –†–§:\n" + parse_rub_down())


@dp.message_handler(commands=("ruup", "ru_up"))
async def rutop(message: types.Message):
    await message.answer("–õ–∏–¥–µ—Ä—ã —Ä–æ—Å—Ç–∞ –≤ –†–§:\n" + parse_rub_up())


# run long-polling
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
input()
